<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Sunday, August 10, 2014, 6:36 PM -->
<!-- MuClient version 4.91 -->

<!-- Plugin "tick_sleep_gmcp" generated by Plugin Wizard -->

<muclient>
<plugin
   name="tick_sleep_gmcp"
   author="Ixultar"
   id="e63403e08a25a4eb38c471a6"
   language="Lua"
   save_state="y"
   purpose="Automatically sleep 2 seconds before tick when needed"
   date_written="2014-08-10 18:35:16"
   requires="4.73"
   version="1.0"
   >
<description trim="y">
<![CDATA[
Will sleep when the following conditions are met:
- You are not in combat AND
- Health is lower than 95% of max, OR
- Mana is lower than 90%, OR
- Move is lower than 75%

Commands available for the script:
ts - toggles the script on or off (timer still runs in the background)
ts fire - automatically tries to create a camp fire in the room immediately before sleeping
ts camp - automatically tries to create a camp in the room immediately before sleeping
(fire/camp/off is a 3-state toggle -- you can't turn both fire and camp on simultaneously)
ts pk - toggle whether or not you will sleep in PK rooms

***Note***
This script calls "wake" and "sleep".  If you want to use a ring of regeneration when you sleep, simply create your own alias
for "sleep" and "wake" such as: 

(sleep)
wear regen
sleep

and 

(wake)
wear supercoolring
wake

]]>
</description>
</plugin>


<!--  Timers  -->

<timers>
  <timer name="ticksleep" enabled="y" second="28.00" offset_second="0.00" send_to="12" group="tick_sleep_group" >
  <send>
	-- ColourNote("green", "", "2 seconds until tick")
	ProcessData()
  </send>

  </timer>
</timers>

<!--  Aliases  -->

<aliases>
  <alias
   name="tick_sleep_toggle"
   match="ts"
   enabled="y"
   group="tick_sleep"
   send_to="12"
   sequence="100"
  >
  <send>
  if GetVariable("tick_sleep") == "off" then
    SetVariable("tick_sleep", "on")
    Note("ticksleep is on")
  else
    SetVariable("tick_sleep", "off")
    Note("ticksleep is off")
  end
  </send>
  </alias>

  <alias
   name="tick_sleep_set"
   match="^ts (on|off)$"
   regexp="y"
   enabled="y"
   group="tick_sleep"
   send_to="12"
   sequence="100"
  >
  <send>
    SetVariable("tick_sleep", "%1")
    Note("ticksleep is " .. "%1")
  </send>
  </alias>  

  <alias
   name="tick_sleep_autocamp"
   match="ts camp"
   enabled="y"
   group="tick_sleep"
   send_to="12"
   sequence="100"
  >
  <send>
  if GetVariable("tick_camp") == "camp" then
    SetVariable("tick_camp", "off")
    Note("ticksleep auto camp is off")
  else
    SetVariable("tick_camp", "camp")
    Note("ticksleep auto camp is on")
  end
  </send>
  </alias>

  <alias
   name="tick_sleep_autofire"
   match="ts fire"
   enabled="y"
   group="tick_sleep"
   send_to="12"
   sequence="100"
  >
  <send>
  if GetVariable("tick_camp") == "fire" then
    SetVariable("tick_camp", "off")
    Note("ticksleep auto fire is off")
  else
    SetVariable("tick_camp", "fire")
    Note("ticksleep auto fire is on")
  end
  </send>
  </alias>

  <alias
   name="tick_sleep_pkrooms"
   match="ts pk"
   enabled="y"
   group="tick_sleep"
   send_to="12"
   sequence="100"
  >
  <send>
  if GetVariable("tick_pk") ~= "off" then
    SetVariable("tick_pk", "off")
    Note("Tick sleeping will now occur in pk rooms")
  else
    SetVariable("tick_pk", "on")
    Note("Tick sleeping will no longer occur in pk rooms")
  end
  </send>
  </alias></aliases>


<!--  Script  -->

<script>
<![CDATA[

require "gmcphelper"
require "serialize"

fulldata = {}
roomdata = {}

local position = ""

--=================================================================================
-- Called when plugin receives telnet data - main entry point for actually running
-- the plugin.
--=================================================================================

function OnPluginBroadcast (msg, id, name, text)
	if (text == "comm.tick") then
		ExecuteTick()
	end

	-- ColourNote ("yellow", "", text)

   if (id == '3e7dedbe37e44942dd46d264') then
      if (text == "char.stats" or text == "char.maxstats" or text == "char.vitals" or text == "char.worth" or text == "char.status") then
         res, gmcparg = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval","char") --- We just want the gmcp.char section.
         luastmt = "gmcpdata = " .. gmcparg --- Convert the serialized string back into a lua table.

         assert (loadstring (luastmt or "")) ()
		 
		 position = gmcpval("status.pos")
      else 
      if (text == "room.info") then
         res, gmcparg = CallPlugin("3e7dedbe37e44942dd46d264", "gmcpval", "room.info")
         luastmt = "roomdata = " .. gmcparg --- Convert the serialized string back into a lua table.

         assert (loadstring (luastmt or "")) ()

		 -- ColourNote("red", "", "Room info : " .. roomdata.name)	
		 -- if (string.find(roomdata.details, "pk") ~= nil) then  ColourNote("red", "", " *** PK Room!!! ***") end
      end
      end
   end
end

old_position = ""
auto_sleep = false

function ExecuteTick ()
	ResetTimer("ticksleep")

	if (auto_sleep) then
		Execute("wake")
		auto_sleep = false
	end
	
end -- Execute Tick

function ProcessData()
	if (GetVariable("tick_sleep") == "off" and inSleepRoom(roomdata.num) == false) then return end

	old_position = position
	if (old_position == "Standing" or old_position == "Sitting")
	then
		if (underThreshold ("vitals.hp", "maxstats.maxhp", .85) 
			or underThreshold ("vitals.mana", "maxstats.maxmana", .85)
			or underThreshold ("vitals.moves", "maxstats.maxmoves", .70) )
		then
			if (string.find(roomdata.details, "pk") ~= nil and GetVariable("tick_pk") ~= "off") then
				ColourNote("yellow", "", "You have chosen not to automatically sleep in PK rooms.")
				return
			end

			if (roomdata.num ~= "-1") then -- Clan room is -1, doesn't need a fire
				if (GetVariable("tick_camp") == "camp") then Execute("camp") end
				if (GetVariable("tick_camp") == "fire") then Execute("fire") end
			end
			Execute("sleep")
			auto_sleep = true
		end
	end
end -- ProcessData

function underThreshold ( current, max, threshold )
	if (gmcpval and gmcpval(current) and gmcpval(max)) then
		c = tonumber ( gmcpval(current) )
		m = tonumber ( gmcpval(max) )

		if (c > 0 and m > 0 and c / m < threshold) then
			return true
		end

	end

	return false

end -- checkThreshold

function inSleepRoom ( room_id )
	if (room_id == "52504" -- My Manor
		or room_id == "nomap_The Warehouse_loqui" -- Clan
		or room_id == "28540" -- The Cemetary
		or room_id == "28545" -- The Cellar
		)
		then return true
		
	end
	return false
end --inSleepRoom

]]>
</script>
</muclient>
